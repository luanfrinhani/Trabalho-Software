{"version":3,"sources":["index.js"],"names":["require","Plugin","findDOMElement","toArray","getFormData","default","module","exports","uppy","opts","type","id","title","defaultOptions","target","resultName","getMetaFromForm","addResultToForm","multipleResults","submitOnSuccess","triggerUploadOnSubmit","handleFormSubmit","bind","handleUploadStart","handleSuccess","result","form","submit","ev","preventDefault","elements","disabledByUppy","forEach","el","isButton","tagName","disabled","push","upload","then","button","err","Promise","reject","catch","log","stack","message","resultInput","querySelector","updatedResult","JSON","parse","value","Array","isArray","stringify","document","createElement","name","appendChild","formMeta","setMeta","install","nodeName","addEventListener","on","uninstall","removeEventListener","off","VERSION"],"mappings":"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","sourcesContent":["const { Plugin } = require('@uppy/core')\nconst findDOMElement = require('@uppy/utils/lib/findDOMElement')\nconst toArray = require('@uppy/utils/lib/toArray')\n// Rollup uses get-form-data's ES modules build, and rollup-plugin-commonjs automatically resolves `.default`.\n// So, if we are being built using rollup, this require() won't have a `.default` property.\nconst getFormData = require('get-form-data').default || require('get-form-data')\n\n/**\n * Form\n */\nmodule.exports = class Form extends Plugin {\n  static VERSION = require('../package.json').version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'acquirer'\n    this.id = this.opts.id || 'Form'\n    this.title = 'Form'\n\n    // set default options\n    const defaultOptions = {\n      target: null,\n      resultName: 'uppyResult',\n      getMetaFromForm: true,\n      addResultToForm: true,\n      multipleResults: false,\n      submitOnSuccess: false,\n      triggerUploadOnSubmit: false,\n    }\n\n    // merge default options with the ones set by user\n    this.opts = { ...defaultOptions, ...opts }\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\n    this.handleUploadStart = this.handleUploadStart.bind(this)\n    this.handleSuccess = this.handleSuccess.bind(this)\n    this.addResultToForm = this.addResultToForm.bind(this)\n    this.getMetaFromForm = this.getMetaFromForm.bind(this)\n  }\n\n  handleUploadStart () {\n    if (this.opts.getMetaFromForm) {\n      this.getMetaFromForm()\n    }\n  }\n\n  handleSuccess (result) {\n    if (this.opts.addResultToForm) {\n      this.addResultToForm(result)\n    }\n\n    if (this.opts.submitOnSuccess) {\n      this.form.submit()\n    }\n  }\n\n  handleFormSubmit (ev) {\n    if (this.opts.triggerUploadOnSubmit) {\n      ev.preventDefault()\n      const elements = toArray(ev.target.elements)\n      const disabledByUppy = []\n      elements.forEach((el) => {\n        const isButton = el.tagName === 'BUTTON' || (el.tagName === 'INPUT' && el.type === 'submit')\n        if (isButton && !el.disabled) {\n          el.disabled = true\n          disabledByUppy.push(el)\n        }\n      })\n      this.uppy.upload().then(() => {\n        disabledByUppy.forEach((button) => {\n          button.disabled = false\n        })\n      }, (err) => {\n        disabledByUppy.forEach((button) => {\n          button.disabled = false\n        })\n        return Promise.reject(err)\n      }).catch((err) => {\n        this.uppy.log(err.stack || err.message || err)\n      })\n    }\n  }\n\n  addResultToForm (result) {\n    this.uppy.log('[Form] Adding result to the original form:')\n    this.uppy.log(result)\n\n    let resultInput = this.form.querySelector(`[name=\"${this.opts.resultName}\"]`)\n    if (resultInput) {\n      if (this.opts.multipleResults) {\n        // Append new result to the previous result array.\n        // If the previous result is empty, or not an array,\n        // set it to an empty array.\n        let updatedResult\n        try {\n          updatedResult = JSON.parse(resultInput.value)\n        } catch (err) {\n          // Nothing, since we check for array below anyway\n        }\n\n        if (!Array.isArray(updatedResult)) {\n          updatedResult = []\n        }\n        updatedResult.push(result)\n        resultInput.value = JSON.stringify(updatedResult)\n      } else {\n        // Replace existing result with the newer result on `complete` event.\n        // This behavior is not ideal, since you most likely want to always keep\n        // all results in the input. This is kept for backwards compatability until 2.0.\n        resultInput.value = JSON.stringify(result)\n      }\n      return\n    }\n\n    resultInput = document.createElement('input')\n    resultInput.name = this.opts.resultName\n    resultInput.type = 'hidden'\n\n    if (this.opts.multipleResults) {\n      // Wrap result in an array so we can have multiple results\n      resultInput.value = JSON.stringify([result])\n    } else {\n      // Result is an object, kept for backwards compatability until 2.0\n      resultInput.value = JSON.stringify(result)\n    }\n\n    this.form.appendChild(resultInput)\n  }\n\n  getMetaFromForm () {\n    const formMeta = getFormData(this.form)\n    // We want to exclude meta the the Form plugin itself has added\n    // See https://github.com/transloadit/uppy/issues/1637\n    delete formMeta[this.opts.resultName]\n    this.uppy.setMeta(formMeta)\n  }\n\n  install () {\n    this.form = findDOMElement(this.opts.target)\n    if (!this.form || this.form.nodeName !== 'FORM') {\n      this.uppy.log('Form plugin requires a <form> target element passed in options to operate, none was found', 'error')\n      return\n    }\n\n    this.form.addEventListener('submit', this.handleFormSubmit)\n    this.uppy.on('upload', this.handleUploadStart)\n    this.uppy.on('complete', this.handleSuccess)\n  }\n\n  uninstall () {\n    this.form.removeEventListener('submit', this.handleFormSubmit)\n    this.uppy.off('upload', this.handleUploadStart)\n    this.uppy.off('complete', this.handleSuccess)\n  }\n}\n"]}