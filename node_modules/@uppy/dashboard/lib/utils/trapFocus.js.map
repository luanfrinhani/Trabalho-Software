{"version":3,"sources":["trapFocus.js"],"names":["toArray","require","getActiveOverlayEl","FOCUSABLE_ELEMENTS","focusOnFirstNode","event","nodes","node","focus","preventDefault","focusOnLastNode","length","isFocusInOverlay","activeOverlayEl","contains","document","activeElement","trapFocus","activeOverlayType","dashboardEl","focusableNodes","querySelectorAll","focusedItemIndex","indexOf","shiftKey","module","exports","forModal","forInline"],"mappings":"AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAMC,kBAAkB,GAAGD,OAAO,CAAC,sBAAD,CAAlC;;AACA,IAAME,kBAAkB,GAAGF,OAAO,CAAC,qCAAD,CAAlC;;AAEA,SAASG,gBAAT,CAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC;AACvC,MAAMC,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAlB;;AACA,MAAIC,IAAJ,EAAU;AACRA,IAAAA,IAAI,CAACC,KAAL;AACAH,IAAAA,KAAK,CAACI,cAAN;AACD;AACF;;AAED,SAASC,eAAT,CAA0BL,KAA1B,EAAiCC,KAAjC,EAAwC;AACtC,MAAMC,IAAI,GAAGD,KAAK,CAACA,KAAK,CAACK,MAAN,GAAe,CAAhB,CAAlB;;AACA,MAAIJ,IAAJ,EAAU;AACRA,IAAAA,IAAI,CAACC,KAAL;AACAH,IAAAA,KAAK,CAACI,cAAN;AACD;AACF,C,CAED;AACA;AACA;;;AACA,SAASG,gBAAT,CAA2BC,eAA3B,EAA4C;AAC1C,SAAOA,eAAe,CAACC,QAAhB,CAAyBC,QAAQ,CAACC,aAAlC,CAAP;AACD;;AAED,SAASC,SAAT,CAAoBZ,KAApB,EAA2Ba,iBAA3B,EAA8CC,WAA9C,EAA2D;AACzD,MAAMN,eAAe,GAAGX,kBAAkB,CAACiB,WAAD,EAAcD,iBAAd,CAA1C;AACA,MAAME,cAAc,GAAGpB,OAAO,CAACa,eAAe,CAACQ,gBAAhB,CAAiClB,kBAAjC,CAAD,CAA9B;AAEA,MAAMmB,gBAAgB,GAAGF,cAAc,CAACG,OAAf,CAAuBR,QAAQ,CAACC,aAAhC,CAAzB,CAJyD,CAMzD;AACA;;AACA,MAAI,CAACJ,gBAAgB,CAACC,eAAD,CAArB,EAAwC;AACtCT,IAAAA,gBAAgB,CAACC,KAAD,EAAQe,cAAR,CAAhB,CADsC,CAExC;AACC,GAHD,MAGO,IAAIf,KAAK,CAACmB,QAAN,IAAkBF,gBAAgB,KAAK,CAA3C,EAA8C;AACnDZ,IAAAA,eAAe,CAACL,KAAD,EAAQe,cAAR,CAAf,CADmD,CAErD;AACC,GAHM,MAGA,IAAI,CAACf,KAAK,CAACmB,QAAP,IAAmBF,gBAAgB,KAAKF,cAAc,CAACT,MAAf,GAAwB,CAApE,EAAuE;AAC5EP,IAAAA,gBAAgB,CAACC,KAAD,EAAQe,cAAR,CAAhB;AACD;AACF;;AAEDK,MAAM,CAACC,OAAP,GAAiB;AACf;AACAC,EAAAA,QAAQ,EAAE,kBAACtB,KAAD,EAAQa,iBAAR,EAA2BC,WAA3B,EAA2C;AACnDF,IAAAA,SAAS,CAACZ,KAAD,EAAQa,iBAAR,EAA2BC,WAA3B,CAAT;AACD,GAJc;AAMf;AACAS,EAAAA,SAAS,EAAE,mBAACvB,KAAD,EAAQa,iBAAR,EAA2BC,WAA3B,EAA2C;AACpD;AACA,QAAID,iBAAiB,KAAK,IAA1B,EAAgC,CAC9B;AACF;AACC,KAHD,MAGO;AACL;AACA;AACAD,MAAAA,SAAS,CAACZ,KAAD,EAAQa,iBAAR,EAA2BC,WAA3B,CAAT;AACD;AACF;AAjBc,CAAjB","sourcesContent":["const toArray = require('@uppy/utils/lib/toArray')\nconst getActiveOverlayEl = require('./getActiveOverlayEl')\nconst FOCUSABLE_ELEMENTS = require('@uppy/utils/lib//FOCUSABLE_ELEMENTS')\n\nfunction focusOnFirstNode (event, nodes) {\n  const node = nodes[0]\n  if (node) {\n    node.focus()\n    event.preventDefault()\n  }\n}\n\nfunction focusOnLastNode (event, nodes) {\n  const node = nodes[nodes.length - 1]\n  if (node) {\n    node.focus()\n    event.preventDefault()\n  }\n}\n\n// ___Why not just use (focusedItemIndex === -1)?\n//    Firefox thinks <ul> is focusable, but we don't have <ul>s in our FOCUSABLE_ELEMENTS. Which means that if we tab into the <ul>, code will think that we are not in the active overlay, and we should focusOnFirstNode() of the currently active overlay!\n//    [Practical check] if we use (focusedItemIndex === -1), instagram provider in firefox will never get focus on its pics in the <ul>.\nfunction isFocusInOverlay (activeOverlayEl) {\n  return activeOverlayEl.contains(document.activeElement)\n}\n\nfunction trapFocus (event, activeOverlayType, dashboardEl) {\n  const activeOverlayEl = getActiveOverlayEl(dashboardEl, activeOverlayType)\n  const focusableNodes = toArray(activeOverlayEl.querySelectorAll(FOCUSABLE_ELEMENTS))\n\n  const focusedItemIndex = focusableNodes.indexOf(document.activeElement)\n\n  // If we pressed tab, and focus is not yet within the current overlay - focus on the first element within the current overlay.\n  // This is a safety measure (for when user returns from another tab e.g.), most plugins will try to focus on some important element as it loads.\n  if (!isFocusInOverlay(activeOverlayEl)) {\n    focusOnFirstNode(event, focusableNodes)\n  // If we pressed shift + tab, and we're on the first element of a modal\n  } else if (event.shiftKey && focusedItemIndex === 0) {\n    focusOnLastNode(event, focusableNodes)\n  // If we pressed tab, and we're on the last element of the modal\n  } else if (!event.shiftKey && focusedItemIndex === focusableNodes.length - 1) {\n    focusOnFirstNode(event, focusableNodes)\n  }\n}\n\nmodule.exports = {\n  // Traps focus inside of the currently open overlay (e.g. Dashboard, or e.g. Instagram), never lets focus disappear from the modal.\n  forModal: (event, activeOverlayType, dashboardEl) => {\n    trapFocus(event, activeOverlayType, dashboardEl)\n  },\n\n  // Traps focus inside of the currently open overlay, unless overlay is null - then let the user tab away.\n  forInline: (event, activeOverlayType, dashboardEl) => {\n    // ___When we're in the bare 'Drop files here, paste, browse or import from' screen\n    if (activeOverlayType === null) {\n      // Do nothing and let the browser handle it, user can tab away from Uppy to other elements on the page\n    // ___When there is some overlay with 'Done' button\n    } else {\n      // Trap the focus inside this overlay!\n      // User can close the overlay (click 'Done') if they want to travel away from Uppy.\n      trapFocus(event, activeOverlayType, dashboardEl)\n    }\n  },\n}\n"]}