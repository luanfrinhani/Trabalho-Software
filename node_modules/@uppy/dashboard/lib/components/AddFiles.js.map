{"version":3,"sources":["AddFiles.js"],"names":["require","h","Component","AddFiles","triggerFileInputClick","fileInput","click","triggerFolderInputClick","folderInput","onFileInputChange","event","props","handleInputChange","target","value","renderHiddenInput","isFolder","refCallback","maxNumberOfFiles","allowedFileTypes","renderMyDeviceAcquirer","i18n","renderBrowseButton","text","onClickFn","numberOfAcquirers","acquirers","length","renderDropPasteBrowseTagline","lowerFMSelectionType","fileManagerSelectionType","camelFMSelectionType","charAt","toUpperCase","slice","browseText","browseFilesText","browseFoldersText","browse","browseFiles","browseFolders","titleText","i18nArray","disableLocalFiles","renderAcquirer","acquirer","id","activePickerPanel","showPanel","icon","name","renderAcquirers","acquirersWithoutLastTwo","lastTwoAcquirers","splice","map","renderPoweredByUppy","uppyBranding","linkText","backwardsCompat","uppy","render","ref","note","proudlyDisplayPoweredByUppy","module","exports"],"mappings":"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","sourcesContent":["const { h, Component } = require('preact')\n\nclass AddFiles extends Component {\n  triggerFileInputClick = () => {\n    this.fileInput.click()\n  }\n\n  triggerFolderInputClick = () => {\n    this.folderInput.click()\n  }\n\n  onFileInputChange = (event) => {\n    this.props.handleInputChange(event)\n\n    // We clear the input after a file is selected, because otherwise\n    // change event is not fired in Chrome and Safari when a file\n    // with the same name is selected.\n    // ___Why not use value=\"\" on <input/> instead?\n    //    Because if we use that method of clearing the input,\n    //    Chrome will not trigger change if we drop the same file twice (Issue #768).\n    event.target.value = null\n  }\n\n  renderPoweredByUppy () {\n    const uppyBranding = (\n      <span>\n        <svg aria-hidden=\"true\" focusable=\"false\" className=\"uppy-c-icon uppy-Dashboard-poweredByIcon\" width=\"11\" height=\"11\" viewBox=\"0 0 11 11\">\n          <path d=\"M7.365 10.5l-.01-4.045h2.612L5.5.806l-4.467 5.65h2.604l.01 4.044h3.718z\" fillRule=\"evenodd\" />\n        </svg>\n        <span className=\"uppy-Dashboard-poweredByUppy\">Uppy</span>\n      </span>\n    )\n\n    // Support both the old word-order-insensitive string `poweredBy` and the new word-order-sensitive string `poweredBy2`\n    const linkText = this.props.i18nArray('poweredBy2', {\n      backwardsCompat: this.props.i18n('poweredBy'),\n      uppy: uppyBranding,\n    })\n\n    return (\n      <a\n        tabIndex=\"-1\"\n        href=\"https://uppy.io\"\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"uppy-Dashboard-poweredBy\"\n      >\n        {linkText}\n      </a>\n    )\n  }\n\n  renderHiddenInput = (isFolder, refCallback) => {\n    return (\n      <input\n        className=\"uppy-Dashboard-input\"\n        hidden\n        aria-hidden=\"true\"\n        tabIndex={-1}\n        webkitdirectory={isFolder}\n        type=\"file\"\n        name=\"files[]\"\n        multiple={this.props.maxNumberOfFiles !== 1}\n        onChange={this.onFileInputChange}\n        accept={this.props.allowedFileTypes}\n        ref={refCallback}\n      />\n    )\n  }\n\n  renderMyDeviceAcquirer = () => {\n    return (\n      <div\n        className=\"uppy-DashboardTab\"\n        role=\"presentation\"\n        data-uppy-acquirer-id=\"MyDevice\"\n      >\n        <button\n          type=\"button\"\n          className=\"uppy-DashboardTab-btn\"\n          role=\"tab\"\n          tabIndex={0}\n          data-uppy-super-focusable\n          onClick={this.triggerFileInputClick}\n        >\n          <svg aria-hidden=\"true\" focusable=\"false\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n            <g fill=\"none\" fillRule=\"evenodd\">\n              <rect className=\"uppy-ProviderIconBg\" width=\"32\" height=\"32\" rx=\"16\" fill=\"#2275D7\" />\n              <path d=\"M21.973 21.152H9.863l-1.108-5.087h14.464l-1.246 5.087zM9.935 11.37h3.958l.886 1.444a.673.673 0 0 0 .585.316h6.506v1.37H9.935v-3.13zm14.898 3.44a.793.793 0 0 0-.616-.31h-.978v-2.126c0-.379-.275-.613-.653-.613H15.75l-.886-1.445a.673.673 0 0 0-.585-.316H9.232c-.378 0-.667.209-.667.587V14.5h-.782a.793.793 0 0 0-.61.303.795.795 0 0 0-.155.663l1.45 6.633c.078.36.396.618.764.618h13.354c.36 0 .674-.246.76-.595l1.631-6.636a.795.795 0 0 0-.144-.675z\" fill=\"#FFF\" />\n            </g>\n          </svg>\n          <div className=\"uppy-DashboardTab-name\">{this.props.i18n('myDevice')}</div>\n        </button>\n      </div>\n    )\n  }\n\n  renderBrowseButton = (text, onClickFn) => {\n    const numberOfAcquirers = this.props.acquirers.length\n    return (\n      <button\n        type=\"button\"\n        className=\"uppy-u-reset uppy-Dashboard-browse\"\n        onClick={onClickFn}\n        data-uppy-super-focusable={numberOfAcquirers === 0}\n      >\n        {text}\n      </button>\n    )\n  }\n\n  // TODO(2.x) remove all the backwards compatibility garbage here\n  renderDropPasteBrowseTagline = () => {\n    const numberOfAcquirers = this.props.acquirers.length\n    // in order to keep the i18n CamelCase and options lower (as are defaults) we will want to transform a lower\n    // to Camel\n    const lowerFMSelectionType = this.props.fileManagerSelectionType\n    const camelFMSelectionType = lowerFMSelectionType.charAt(0).toUpperCase() + lowerFMSelectionType.slice(1)\n\n    // For backwards compatibility, we need to support both 'browse' and 'browseFiles'/'browseFolders' as strings here.\n    let browseText = 'browse'\n    let browseFilesText = 'browse'\n    let browseFoldersText = 'browse'\n    if (lowerFMSelectionType === 'files') {\n      try {\n        browseText = this.props.i18n('browse')\n        browseFilesText = this.props.i18n('browse')\n        browseFoldersText = this.props.i18n('browse')\n      } catch {\n        // Ignore, hopefully we can use the 'browseFiles' / 'browseFolders' strings\n      }\n    }\n    try {\n      browseFilesText = this.props.i18n('browseFiles')\n      browseFoldersText = this.props.i18n('browseFolders')\n    } catch {\n      // Ignore, use the 'browse' string\n    }\n\n    const browse = this.renderBrowseButton(browseText, this.triggerFileInputClick)\n    const browseFiles = this.renderBrowseButton(browseFilesText, this.triggerFileInputClick)\n    const browseFolders = this.renderBrowseButton(browseFoldersText, this.triggerFolderInputClick)\n\n    // Before the `fileManagerSelectionType` feature existed, we had two possible\n    // strings here, but now we have six. We use the new-style strings by default:\n    let titleText\n    if (numberOfAcquirers > 0) {\n      titleText = this.props.i18nArray(`dropPasteImport${camelFMSelectionType}`, { browseFiles, browseFolders, browse })\n    } else {\n      titleText = this.props.i18nArray(`dropPaste${camelFMSelectionType}`, { browseFiles, browseFolders, browse })\n    }\n\n    // We use the old-style strings if available: this implies that the user has\n    // manually specified them, so they should take precedence over the new-style\n    // defaults.\n    if (lowerFMSelectionType === 'files') {\n      try {\n        if (numberOfAcquirers > 0) {\n          titleText = this.props.i18nArray('dropPasteImport', { browse })\n        } else {\n          titleText = this.props.i18nArray('dropPaste', { browse })\n        }\n      } catch {\n        // Ignore, the new-style strings will be used.\n      }\n    }\n\n    if (this.props.disableLocalFiles) {\n      titleText = this.props.i18n('importFiles')\n    }\n\n    return (\n      <div className=\"uppy-Dashboard-AddFiles-title\">\n        {titleText}\n      </div>\n    )\n  }\n\n  renderAcquirer = (acquirer) => {\n    return (\n      <div\n        className=\"uppy-DashboardTab\"\n        role=\"presentation\"\n        data-uppy-acquirer-id={acquirer.id}\n      >\n        <button\n          type=\"button\"\n          className=\"uppy-DashboardTab-btn\"\n          role=\"tab\"\n          tabIndex={0}\n          aria-controls={`uppy-DashboardContent-panel--${acquirer.id}`}\n          aria-selected={this.props.activePickerPanel.id === acquirer.id}\n          data-uppy-super-focusable\n          onClick={() => this.props.showPanel(acquirer.id)}\n        >\n          {acquirer.icon()}\n          <div className=\"uppy-DashboardTab-name\">{acquirer.name}</div>\n        </button>\n      </div>\n    )\n  }\n\n  renderAcquirers = (acquirers, disableLocalFiles) => {\n    // Group last two buttons, so we don’t end up with\n    // just one button on a new line\n    const acquirersWithoutLastTwo = [...acquirers]\n    const lastTwoAcquirers = acquirersWithoutLastTwo.splice(acquirers.length - 2, acquirers.length)\n\n    return (\n      <div className=\"uppy-Dashboard-AddFiles-list\" role=\"tablist\">\n        {!disableLocalFiles && this.renderMyDeviceAcquirer()}\n        {acquirersWithoutLastTwo.map((acquirer) => this.renderAcquirer(acquirer))}\n        <span role=\"presentation\" style=\"white-space: nowrap;\">\n          {lastTwoAcquirers.map((acquirer) => this.renderAcquirer(acquirer))}\n        </span>\n      </div>\n    )\n  }\n\n  render () {\n    return (\n      <div className=\"uppy-Dashboard-AddFiles\">\n        {this.renderHiddenInput(false, (ref) => { this.fileInput = ref })}\n        {this.renderHiddenInput(true, (ref) => { this.folderInput = ref })}\n        {this.renderDropPasteBrowseTagline()}\n        {this.props.acquirers.length > 0 && this.renderAcquirers(this.props.acquirers, this.props.disableLocalFiles)}\n        <div className=\"uppy-Dashboard-AddFiles-info\">\n          {this.props.note && <div className=\"uppy-Dashboard-note\">{this.props.note}</div>}\n          {this.props.proudlyDisplayPoweredByUppy && this.renderPoweredByUppy(this.props)}\n        </div>\n      </div>\n    )\n  }\n}\n\nmodule.exports = AddFiles\n"]}