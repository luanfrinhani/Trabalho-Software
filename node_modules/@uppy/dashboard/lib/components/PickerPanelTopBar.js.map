{"version":3,"sources":["PickerPanelTopBar.js"],"names":["require","h","uploadStates","STATE_ERROR","STATE_WAITING","STATE_PREPROCESSING","STATE_UPLOADING","STATE_POSTPROCESSING","STATE_COMPLETE","STATE_PAUSED","getUploadingState","isAllErrored","isAllComplete","isAllPaused","files","state","fileIDs","Object","keys","i","length","progress","uploadStarted","uploadComplete","preprocess","postprocess","UploadStatus","props","uploadingState","i18n","smart_count","inProgressNotPausedFiles","processingFiles","newFiles","PanelTopBar","allowNewUpload","maxNumberOfFiles","totalFileCount","hideCancelButton","cancelAll","toggleAddFilesPanel","module","exports"],"mappings":"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","sourcesContent":["const { h } = require('preact')\n\nconst uploadStates = {\n  STATE_ERROR: 'error',\n  STATE_WAITING: 'waiting',\n  STATE_PREPROCESSING: 'preprocessing',\n  STATE_UPLOADING: 'uploading',\n  STATE_POSTPROCESSING: 'postprocessing',\n  STATE_COMPLETE: 'complete',\n  STATE_PAUSED: 'paused',\n}\n\nfunction getUploadingState (isAllErrored, isAllComplete, isAllPaused, files = {}) {\n  if (isAllErrored) {\n    return uploadStates.STATE_ERROR\n  }\n\n  if (isAllComplete) {\n    return uploadStates.STATE_COMPLETE\n  }\n\n  if (isAllPaused) {\n    return uploadStates.STATE_PAUSED\n  }\n\n  let state = uploadStates.STATE_WAITING\n  const fileIDs = Object.keys(files)\n  for (let i = 0; i < fileIDs.length; i++) {\n    const progress = files[fileIDs[i]].progress\n    // If ANY files are being uploaded right now, show the uploading state.\n    if (progress.uploadStarted && !progress.uploadComplete) {\n      return uploadStates.STATE_UPLOADING\n    }\n    // If files are being preprocessed AND postprocessed at this time, we show the\n    // preprocess state. If any files are being uploaded we show uploading.\n    if (progress.preprocess && state !== uploadStates.STATE_UPLOADING) {\n      state = uploadStates.STATE_PREPROCESSING\n    }\n    // If NO files are being preprocessed or uploaded right now, but some files are\n    // being postprocessed, show the postprocess state.\n    if (progress.postprocess && state !== uploadStates.STATE_UPLOADING && state !== uploadStates.STATE_PREPROCESSING) {\n      state = uploadStates.STATE_POSTPROCESSING\n    }\n  }\n  return state\n}\n\nfunction UploadStatus (props) {\n  const uploadingState = getUploadingState(\n    props.isAllErrored,\n    props.isAllComplete,\n    props.isAllPaused,\n    props.files\n  )\n\n  switch (uploadingState) {\n    case 'uploading':\n      return props.i18n('uploadingXFiles', { smart_count: props.inProgressNotPausedFiles.length })\n    case 'preprocessing':\n    case 'postprocessing':\n      return props.i18n('processingXFiles', { smart_count: props.processingFiles.length })\n    case 'paused':\n      return props.i18n('uploadPaused')\n    case 'waiting':\n      return props.i18n('xFilesSelected', { smart_count: props.newFiles.length })\n    case 'complete':\n      return props.i18n('uploadComplete')\n  }\n}\n\nfunction PanelTopBar (props) {\n  let allowNewUpload = props.allowNewUpload\n  // TODO maybe this should be done in ../index.js, then just pass that down as `allowNewUpload`\n  if (allowNewUpload && props.maxNumberOfFiles) {\n    allowNewUpload = props.totalFileCount < props.maxNumberOfFiles\n  }\n\n  return (\n    <div className=\"uppy-DashboardContent-bar\">\n      {!props.isAllComplete && !props.hideCancelButton ? (\n        <button\n          className=\"uppy-DashboardContent-back\"\n          type=\"button\"\n          onClick={props.cancelAll}\n        >\n          {props.i18n('cancel')}\n        </button>\n      ) : (\n        <div />\n      )}\n\n      <div className=\"uppy-DashboardContent-title\" role=\"heading\" aria-level=\"1\">\n        <UploadStatus {...props} />\n      </div>\n\n      {allowNewUpload ? (\n        <button\n          className=\"uppy-DashboardContent-addMore\"\n          type=\"button\"\n          aria-label={props.i18n('addMoreFiles')}\n          title={props.i18n('addMoreFiles')}\n          onClick={() => props.toggleAddFilesPanel(true)}\n        >\n          <svg aria-hidden=\"true\" focusable=\"false\" className=\"uppy-c-icon\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\">\n            <path d=\"M8 6.5h6a.5.5 0 0 1 .5.5v.5a.5.5 0 0 1-.5.5H8v6a.5.5 0 0 1-.5.5H7a.5.5 0 0 1-.5-.5V8h-6a.5.5 0 0 1-.5-.5V7a.5.5 0 0 1 .5-.5h6v-6A.5.5 0 0 1 7 0h.5a.5.5 0 0 1 .5.5v6z\" />\n          </svg>\n          <span className=\"uppy-DashboardContent-addMoreCaption\">{props.i18n('addMore')}</span>\n        </button>\n      ) : (\n        <div />\n      )}\n    </div>\n  )\n}\n\nmodule.exports = PanelTopBar\n"]}