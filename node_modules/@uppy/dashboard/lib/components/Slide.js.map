{"version":3,"sources":["Slide.js"],"names":["require","cloneElement","Component","classNames","transitionName","duration","Slide","props","state","cachedChildren","className","componentWillUpdate","nextProps","child","children","patch","cancelAnimationFrame","animationFrame","clearTimeout","leaveTimeout","undefined","requestAnimationFrame","base","getBoundingClientRect","setState","enterTimeout","setTimeout","render","attributes","module","exports"],"mappings":"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","sourcesContent":["const { cloneElement, Component } = require('preact')\nconst classNames = require('classnames')\n\nconst transitionName = 'uppy-transition-slideDownUp'\nconst duration = 250\n\n/**\n * Vertical slide transition.\n *\n * This can take a _single_ child component, which _must_ accept a `className` prop.\n *\n * Currently this is specific to the `uppy-transition-slideDownUp` transition,\n * but it should be simple to extend this for any type of single-element\n * transition by setting the CSS name and duration as props.\n */\nclass Slide extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      cachedChildren: null,\n      className: '',\n    }\n  }\n\n  componentWillUpdate (nextProps) {\n    const { cachedChildren } = this.state\n    const child = nextProps.children[0]\n\n    if (cachedChildren === child) return\n\n    const patch = {\n      cachedChildren: child,\n    }\n\n    // Enter transition\n    if (child && !cachedChildren) {\n      patch.className = `${transitionName}-enter`\n\n      cancelAnimationFrame(this.animationFrame)\n      clearTimeout(this.leaveTimeout)\n      this.leaveTimeout = undefined\n\n      this.animationFrame = requestAnimationFrame(() => {\n        // Force it to render before we add the active class\n        this.base.getBoundingClientRect()\n\n        this.setState({\n          className: `${transitionName}-enter ${transitionName}-enter-active`,\n        })\n\n        this.enterTimeout = setTimeout(() => {\n          this.setState({ className: '' })\n        }, duration)\n      })\n    }\n\n    // Leave transition\n    if (cachedChildren && !child && this.leaveTimeout === undefined) {\n      patch.cachedChildren = cachedChildren\n      patch.className = `${transitionName}-leave`\n\n      cancelAnimationFrame(this.animationFrame)\n      clearTimeout(this.enterTimeout)\n      this.enterTimeout = undefined\n      this.animationFrame = requestAnimationFrame(() => {\n        this.setState({\n          className: `${transitionName}-leave ${transitionName}-leave-active`,\n        })\n\n        this.leaveTimeout = setTimeout(() => {\n          this.setState({\n            cachedChildren: null,\n            className: '',\n          })\n        }, duration)\n      })\n    }\n\n    this.setState(patch)\n  }\n\n  render () {\n    const { cachedChildren, className } = this.state\n\n    if (!cachedChildren) {\n      return null\n    }\n\n    return cloneElement(cachedChildren, {\n      className: classNames(className, cachedChildren.attributes.className),\n    })\n  }\n}\n\nmodule.exports = Slide\n"]}