{"version":3,"sources":["CaptureScreen.js"],"names":["require","h","Component","RecordButton","SubmitButton","StopWatch","StreamStatus","RecorderScreen","componentWillUnmount","props","onStop","render","recording","videoStream","stream","recordedVideo","videoProps","playsinline","muted","autoplay","srcObject","controls","src","videoElement","undefined","module","exports"],"mappings":";;;;;;eAAyBA,OAAO,CAAC,QAAD,C;IAAxBC,C,YAAAA,C;IAAGC,S,YAAAA,S;;AACX,IAAMC,YAAY,GAAGH,OAAO,CAAC,gBAAD,CAA5B;;AACA,IAAMI,YAAY,GAAGJ,OAAO,CAAC,gBAAD,CAA5B;;AACA,IAAMK,SAAS,GAAGL,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAMM,YAAY,GAAGN,OAAO,CAAC,gBAAD,CAA5B;;IAEMO,c;;;;;;;;;SACJC,oB,GAAA,gCAAwB;AACtB,SAAKC,KAAL,CAAWC,MAAX;AACD,G;;SAEDC,M,GAAA,kBAAU;AAAA;;AAAA,sBACkD,KAAKF,KADvD;AAAA,QACAG,SADA,eACAA,SADA;AAAA,QACmBC,WADnB,eACWC,MADX;AAAA,QACgCC,aADhC,eACgCA,aADhC;AAGR,QAAMC,UAAU,GAAG;AACjBC,MAAAA,WAAW,EAAE;AADI,KAAnB,CAHQ,CAOR;;AACA,QAAIL,SAAS,IAAK,CAACG,aAAD,IAAkB,CAACH,SAArC,EAAiD;AAC/CI,MAAAA,UAAU,CAACE,KAAX,GAAmB,IAAnB;AACAF,MAAAA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AACAH,MAAAA,UAAU,CAACI,SAAX,GAAuBP,WAAvB;AACD,KAZO,CAcR;;;AACA,QAAIE,aAAa,IAAI,CAACH,SAAtB,EAAiC;AAC/BI,MAAAA,UAAU,CAACE,KAAX,GAAmB,KAAnB;AACAF,MAAAA,UAAU,CAACK,QAAX,GAAsB,IAAtB;AACAL,MAAAA,UAAU,CAACM,GAAX,GAAiBP,aAAjB,CAH+B,CAK/B;;AACA,UAAI,KAAKQ,YAAT,EAAuB;AACrB,aAAKA,YAAL,CAAkBH,SAAlB,GAA8BI,SAA9B;AACD;AACF;;AAED,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,EAAC,YAAD,EAAkB,KAAKf,KAAvB,CADF,EAEE;AAAO,MAAA,GAAG,EAAE,aAAAc,YAAY;AAAA,eAAK,KAAI,CAACA,YAAL,GAAoBA,YAAzB;AAAA,OAAxB;AAAgE,MAAA,SAAS,EAAC;AAA1E,OAAyGP,UAAzG,EAFF,EAGE,EAAC,SAAD,EAAe,KAAKP,KAApB,CAHF,CADF,EAOE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,EAAC,YAAD,EAAkB,KAAKA,KAAvB,CADF,EAEE,EAAC,YAAD,EAAkB,KAAKA,KAAvB,CAFF,CAPF,CADF;AAcD,G;;;EA7C0BP,S;;AAgD7BuB,MAAM,CAACC,OAAP,GAAiBnB,cAAjB","sourcesContent":["const { h, Component } = require('preact')\nconst RecordButton = require('./RecordButton')\nconst SubmitButton = require('./SubmitButton')\nconst StopWatch = require('./StopWatch')\nconst StreamStatus = require('./StreamStatus')\n\nclass RecorderScreen extends Component {\n  componentWillUnmount () {\n    this.props.onStop()\n  }\n\n  render () {\n    const { recording, stream: videoStream, recordedVideo } = this.props\n\n    const videoProps = {\n      playsinline: true,\n    }\n\n    // show stream\n    if (recording || (!recordedVideo && !recording)) {\n      videoProps.muted = true\n      videoProps.autoplay = true\n      videoProps.srcObject = videoStream\n    }\n\n    // show preview\n    if (recordedVideo && !recording) {\n      videoProps.muted = false\n      videoProps.controls = true\n      videoProps.src = recordedVideo\n\n      // reset srcObject in dom. If not resetted, stream sticks in element\n      if (this.videoElement) {\n        this.videoElement.srcObject = undefined\n      }\n    }\n\n    return (\n      <div className=\"uppy uppy-ScreenCapture-container\">\n        <div className=\"uppy-ScreenCapture-videoContainer\">\n          <StreamStatus {...this.props} />\n          <video ref={videoElement => (this.videoElement = videoElement)} className=\"uppy-ScreenCapture-video\" {...videoProps} />\n          <StopWatch {...this.props} />\n        </div>\n\n        <div className=\"uppy-ScreenCapture-buttonContainer\">\n          <RecordButton {...this.props} />\n          <SubmitButton {...this.props} />\n        </div>\n      </div>\n    )\n  }\n}\n\nmodule.exports = RecorderScreen\n"]}