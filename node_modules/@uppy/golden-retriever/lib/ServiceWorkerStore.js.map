{"version":3,"sources":["ServiceWorkerStore.js"],"names":["isSupported","navigator","waitForServiceWorker","Promise","resolve","reject","Error","serviceWorker","controller","addEventListener","ServiceWorkerStore","opts","ready","name","storeName","list","defer","promise","console","log","onMessage","event","data","store","type","files","removeEventListener","then","postMessage","put","file","delete","fileID","module","exports"],"mappings":"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","sourcesContent":["/*eslint-disable */\n\nconst isSupported = typeof navigator !== 'undefined' && 'serviceWorker' in navigator\n\nfunction waitForServiceWorker () {\n  return new Promise((resolve, reject) => {\n    if (!isSupported) {\n      reject(new Error('Unsupported'))\n    } else if (navigator.serviceWorker.controller) {\n      // A serviceWorker is already registered and active.\n      resolve()\n    } else {\n      navigator.serviceWorker.addEventListener('controllerchange', () => {\n        resolve()\n      })\n    }\n  })\n}\n\nclass ServiceWorkerStore {\n  constructor (opts) {\n    this.ready = waitForServiceWorker()\n    this.name = opts.storeName\n  }\n\n  list () {\n    const defer = {}\n    const promise = new Promise((resolve, reject) => {\n      defer.resolve = resolve\n      defer.reject = reject\n    })\n\n    console.log('Loading stored blobs from Service Worker')\n    const onMessage = (event) => {\n      if (event.data.store !== this.name) {\n        return\n      }\n      switch (event.data.type) {\n        case 'uppy/ALL_FILES':\n          defer.resolve(event.data.files)\n          navigator.serviceWorker.removeEventListener('message', onMessage)\n          break\n      }\n    }\n\n    this.ready.then(() => {\n      navigator.serviceWorker.addEventListener('message', onMessage)\n\n      navigator.serviceWorker.controller.postMessage({\n        type: 'uppy/GET_FILES',\n        store: this.name\n      })\n    })\n\n    return promise\n  }\n\n  put (file) {\n    return this.ready.then(() => {\n      navigator.serviceWorker.controller.postMessage({\n        type: 'uppy/ADD_FILE',\n        store: this.name,\n        file: file\n      })\n    })\n  }\n\n  delete (fileID) {\n    return this.ready.then(() => {\n      navigator.serviceWorker.controller.postMessage({\n        type: 'uppy/REMOVE_FILE',\n        store: this.name,\n        fileID: fileID\n      })\n    })\n  }\n}\n\nServiceWorkerStore.isSupported = isSupported\n\nmodule.exports = ServiceWorkerStore\n"]}