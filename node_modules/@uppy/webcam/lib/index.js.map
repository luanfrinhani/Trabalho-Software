{"version":3,"sources":["index.js"],"names":["require","h","Plugin","Translator","getFileTypeExtension","mimeTypes","canvasToBlob","supportsMediaRecorder","CameraIcon","CameraScreen","PermissionsScreen","packageJsonVersion","toMimeType","fileType","slice","isVideoMimeType","mimeType","test","isImageMimeType","getMediaDevices","navigator","mediaDevices","getUserMedia","mozGetUserMedia","webkitGetUserMedia","opts","Promise","resolve","reject","call","module","exports","uppy","supportsUserMedia","protocol","location","match","id","title","type","capturedMediaFile","icon","defaultLocale","strings","smile","takePicture","startRecording","stopRecording","allowAccessTitle","allowAccessDescription","noCameraTitle","noCameraDescription","recordingStoppedMaxSize","recordingLength","submitRecordedFile","discardRecordedFile","defaultOptions","onBeforeSnapshot","countdown","modes","mirror","showVideoSourceDropdown","facingMode","preferredImageMimeType","preferredVideoMimeType","showRecordingLength","i18nInit","install","bind","setPluginState","render","start","stop","takeSnapshot","discardRecordedVideo","submit","oneTwoThreeSmile","focus","changeVideoSource","webcamActive","hasCamera","cameraReady","cameraError","recordingLengthSeconds","videoSources","currentDeviceId","setOptions","newOpts","videoConstraints","translator","locale","i18n","translate","i18nArray","translateArray","hasCameraCheck","enumerateDevices","then","devices","some","device","kind","isAudioOnly","length","getConstraints","deviceId","acceptsAudio","indexOf","acceptsVideo","audio","video","options","Error","constraints","stream","tracks","getAudioTracks","getVideoTracks","getSettings","forEach","track","updateVideoSources","catch","err","info","message","getMediaRecorderOptions","MediaRecorder","isTypeSupported","restrictions","preferredVideoMimeTypes","allowedFileTypes","map","filter","filterSupportedTypes","candidateType","acceptableMimeTypes","recorder","recordingChunks","stoppingBecauseOfMaxSize","addEventListener","event","push","data","maxFileSize","totalSize","reduce","acc","chunk","size","averageChunkSize","expectedEndChunkSize","maxSize","Math","max","recordingLengthTimer","setInterval","currentRecordingLength","getPluginState","isRecording","stopped","clearInterval","getVideo","file","recordedVideo","URL","createObjectURL","isRestriction","log","error","addFile","getVideoElement","el","querySelector","count","countDown","captureInProgress","setTimeout","getImage","tagFile","width","videoWidth","height","videoHeight","canvas","document","createElement","ctx","getContext","drawImage","preferredImageMimeTypes","ext","name","Date","now","blob","source","Blob","find","fileExtension","webcamState","target","mount","ondevicechange","restartStream","videoSource","uninstall","unmount","VERSION"],"mappings":"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","sourcesContent":["const { h } = require('preact')\nconst { Plugin } = require('@uppy/core')\nconst Translator = require('@uppy/utils/lib/Translator')\nconst getFileTypeExtension = require('@uppy/utils/lib/getFileTypeExtension')\nconst mimeTypes = require('@uppy/utils/lib/mimeTypes')\nconst canvasToBlob = require('@uppy/utils/lib/canvasToBlob')\nconst supportsMediaRecorder = require('./supportsMediaRecorder')\nconst CameraIcon = require('./CameraIcon')\nconst CameraScreen = require('./CameraScreen')\nconst PermissionsScreen = require('./PermissionsScreen')\nconst packageJsonVersion = require('../package.json').version\n\n/**\n * Normalize a MIME type or file extension into a MIME type.\n *\n * @param {string} fileType - MIME type or a file extension prefixed with `.`.\n * @returns {string|undefined} The MIME type or `undefined` if the fileType is an extension and is not known.\n */\nfunction toMimeType (fileType) {\n  if (fileType[0] === '.') {\n    return mimeTypes[fileType.slice(1)]\n  }\n  return fileType\n}\n\n/**\n * Is this MIME type a video?\n *\n * @param {string} mimeType - MIME type.\n * @returns {boolean}\n */\nfunction isVideoMimeType (mimeType) {\n  return /^video\\/[^*]+$/.test(mimeType)\n}\n\n/**\n * Is this MIME type an image?\n *\n * @param {string} mimeType - MIME type.\n * @returns {boolean}\n */\nfunction isImageMimeType (mimeType) {\n  return /^image\\/[^*]+$/.test(mimeType)\n}\n\n/**\n * Setup getUserMedia, with polyfill for older browsers\n * Adapted from: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n */\nfunction getMediaDevices () {\n  // eslint-disable-next-line compat/compat\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // eslint-disable-next-line compat/compat\n    return navigator.mediaDevices\n  }\n\n  const getUserMedia = navigator.mozGetUserMedia || navigator.webkitGetUserMedia\n  if (!getUserMedia) {\n    return null\n  }\n\n  return {\n    getUserMedia (opts) {\n      return new Promise((resolve, reject) => {\n        getUserMedia.call(navigator, opts, resolve, reject)\n      })\n    },\n  }\n}\n/**\n * Webcam\n */\nmodule.exports = class Webcam extends Plugin {\n  static VERSION = packageJsonVersion\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.mediaDevices = getMediaDevices()\n    this.supportsUserMedia = !!this.mediaDevices\n    // eslint-disable-next-line no-restricted-globals\n    this.protocol = location.protocol.match(/https/i) ? 'https' : 'http'\n    this.id = this.opts.id || 'Webcam'\n    this.title = this.opts.title || 'Camera'\n    this.type = 'acquirer'\n    this.capturedMediaFile = null\n    this.icon = () => (\n      <svg aria-hidden=\"true\" focusable=\"false\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <rect className=\"uppy-ProviderIconBg\" fill=\"#03BFEF\" width=\"32\" height=\"32\" rx=\"16\" />\n          <path d=\"M22 11c1.133 0 2 .867 2 2v7.333c0 1.134-.867 2-2 2H10c-1.133 0-2-.866-2-2V13c0-1.133.867-2 2-2h2.333l1.134-1.733C13.6 9.133 13.8 9 14 9h4c.2 0 .4.133.533.267L19.667 11H22zm-6 1.533a3.764 3.764 0 0 0-3.8 3.8c0 2.129 1.672 3.801 3.8 3.801s3.8-1.672 3.8-3.8c0-2.13-1.672-3.801-3.8-3.801zm0 6.261c-1.395 0-2.46-1.066-2.46-2.46 0-1.395 1.065-2.461 2.46-2.461s2.46 1.066 2.46 2.46c0 1.395-1.065 2.461-2.46 2.461z\" fill=\"#FFF\" fillRule=\"nonzero\" />\n        </g>\n      </svg>\n    )\n\n    this.defaultLocale = {\n      strings: {\n        smile: 'Smile!',\n        takePicture: 'Take a picture',\n        startRecording: 'Begin video recording',\n        stopRecording: 'Stop video recording',\n        allowAccessTitle: 'Please allow access to your camera',\n        allowAccessDescription: 'In order to take pictures or record video with your camera, please allow camera access for this site.',\n        noCameraTitle: 'Camera Not Available',\n        noCameraDescription: 'In order to take pictures or record video, please connect a camera device',\n        recordingStoppedMaxSize: 'Recording stopped because the file size is about to exceed the limit',\n        recordingLength: 'Recording length %{recording_length}',\n        submitRecordedFile: 'Submit recorded file',\n        discardRecordedFile: 'Discard recorded file',\n      },\n    }\n\n    // set default options\n    const defaultOptions = {\n      onBeforeSnapshot: () => Promise.resolve(),\n      countdown: false,\n      modes: [\n        'video-audio',\n        'video-only',\n        'audio-only',\n        'picture',\n      ],\n      mirror: true,\n      showVideoSourceDropdown: false,\n      facingMode: 'user',\n      preferredImageMimeType: null,\n      preferredVideoMimeType: null,\n      showRecordingLength: false,\n    }\n\n    this.opts = { ...defaultOptions, ...opts }\n\n    this.i18nInit()\n\n    this.install = this.install.bind(this)\n    this.setPluginState = this.setPluginState.bind(this)\n\n    this.render = this.render.bind(this)\n\n    // Camera controls\n    this.start = this.start.bind(this)\n    this.stop = this.stop.bind(this)\n    this.takeSnapshot = this.takeSnapshot.bind(this)\n    this.startRecording = this.startRecording.bind(this)\n    this.stopRecording = this.stopRecording.bind(this)\n    this.discardRecordedVideo = this.discardRecordedVideo.bind(this)\n    this.submit = this.submit.bind(this)\n    this.oneTwoThreeSmile = this.oneTwoThreeSmile.bind(this)\n    this.focus = this.focus.bind(this)\n    this.changeVideoSource = this.changeVideoSource.bind(this)\n\n    this.webcamActive = false\n\n    if (this.opts.countdown) {\n      this.opts.onBeforeSnapshot = this.oneTwoThreeSmile\n    }\n\n    this.setPluginState({\n      hasCamera: false,\n      cameraReady: false,\n      cameraError: null,\n      recordingLengthSeconds: 0,\n      videoSources: [],\n      currentDeviceId: null,\n    })\n  }\n\n  setOptions (newOpts) {\n    super.setOptions({\n      ...newOpts,\n      videoConstraints: {\n        // May be undefined but ... handles that\n        ...this.opts.videoConstraints,\n        ...newOpts?.videoConstraints,\n      },\n    })\n\n    this.i18nInit()\n  }\n\n  i18nInit () {\n    this.translator = new Translator([this.defaultLocale, this.uppy.locale, this.opts.locale])\n    this.i18n = this.translator.translate.bind(this.translator)\n    this.i18nArray = this.translator.translateArray.bind(this.translator)\n    this.setPluginState() // so that UI re-renders and we see the updated locale\n  }\n\n  hasCameraCheck () {\n    if (!this.mediaDevices) {\n      return Promise.resolve(false)\n    }\n\n    return this.mediaDevices.enumerateDevices().then(devices => {\n      return devices.some(device => device.kind === 'videoinput')\n    })\n  }\n\n  isAudioOnly () {\n    return this.opts.modes.length === 1 && this.opts.modes[0] === 'audio-only'\n  }\n\n  getConstraints (deviceId = null) {\n    const acceptsAudio = this.opts.modes.indexOf('video-audio') !== -1\n      || this.opts.modes.indexOf('audio-only') !== -1\n    const acceptsVideo = !this.isAudioOnly()\n        && (this.opts.modes.indexOf('video-audio') !== -1\n          || this.opts.modes.indexOf('video-only') !== -1\n          || this.opts.modes.indexOf('picture') !== -1)\n\n    const videoConstraints = {\n      ...(this.opts.videoConstraints ?? { facingMode: this.opts.facingMode }),\n      // facingMode takes precedence over deviceId, and not needed\n      // when specific device is selected\n      ...(deviceId ? { deviceId, facingMode: null } : {}),\n    }\n\n    return {\n      audio: acceptsAudio,\n      video: acceptsVideo ? videoConstraints : false,\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  start (options = null) {\n    if (!this.supportsUserMedia) {\n      return Promise.reject(new Error('Webcam access not supported'))\n    }\n\n    this.webcamActive = true\n    this.opts.mirror = true\n\n    const constraints = this.getConstraints(options && options.deviceId ? options.deviceId : null)\n\n    this.hasCameraCheck().then(hasCamera => {\n      this.setPluginState({\n        hasCamera,\n      })\n\n      // ask user for access to their camera\n      return this.mediaDevices.getUserMedia(constraints)\n        .then((stream) => {\n          this.stream = stream\n\n          let currentDeviceId = null\n          const tracks = this.isAudioOnly() ? stream.getAudioTracks() : stream.getVideoTracks()\n\n          if (!options || !options.deviceId) {\n            currentDeviceId = tracks[0].getSettings().deviceId\n          } else {\n            tracks.forEach((track) => {\n              if (track.getSettings().deviceId === options.deviceId) {\n                currentDeviceId = track.getSettings().deviceId\n              }\n            })\n          }\n\n          // Update the sources now, so we can access the names.\n          this.updateVideoSources()\n\n          this.setPluginState({\n            currentDeviceId,\n            cameraReady: true,\n          })\n        })\n        .catch((err) => {\n          this.setPluginState({\n            cameraReady: false,\n            cameraError: err,\n          })\n          this.uppy.info(err.message, 'error')\n        })\n    })\n  }\n\n  /**\n   * @returns {object}\n   */\n  getMediaRecorderOptions () {\n    const options = {}\n\n    // Try to use the `opts.preferredVideoMimeType` or one of the `allowedFileTypes` for the recording.\n    // If the browser doesn't support it, we'll fall back to the browser default instead.\n    // Safari doesn't have the `isTypeSupported` API.\n    if (MediaRecorder.isTypeSupported) {\n      const { restrictions } = this.uppy.opts\n      let preferredVideoMimeTypes = []\n      if (this.opts.preferredVideoMimeType) {\n        preferredVideoMimeTypes = [this.opts.preferredVideoMimeType]\n      } else if (restrictions.allowedFileTypes) {\n        preferredVideoMimeTypes = restrictions.allowedFileTypes.map(toMimeType).filter(isVideoMimeType)\n      }\n\n      const filterSupportedTypes = (candidateType) => MediaRecorder.isTypeSupported(candidateType)\n        && getFileTypeExtension(candidateType)\n      const acceptableMimeTypes = preferredVideoMimeTypes.filter(filterSupportedTypes)\n\n      if (acceptableMimeTypes.length > 0) {\n        // eslint-disable-next-line prefer-destructuring\n        options.mimeType = acceptableMimeTypes[0]\n      }\n    }\n\n    return options\n  }\n\n  startRecording () {\n    // only used if supportsMediaRecorder() returned true\n    // eslint-disable-next-line compat/compat\n    this.recorder = new MediaRecorder(this.stream, this.getMediaRecorderOptions())\n    this.recordingChunks = []\n    let stoppingBecauseOfMaxSize = false\n    this.recorder.addEventListener('dataavailable', (event) => {\n      this.recordingChunks.push(event.data)\n\n      const { restrictions } = this.uppy.opts\n      if (this.recordingChunks.length > 1\n          && restrictions.maxFileSize != null\n          && !stoppingBecauseOfMaxSize) {\n        const totalSize = this.recordingChunks.reduce((acc, chunk) => acc + chunk.size, 0)\n        // Exclude the initial chunk from the average size calculation because it is likely to be a very small outlier\n        const averageChunkSize = (totalSize - this.recordingChunks[0].size) / (this.recordingChunks.length - 1)\n        const expectedEndChunkSize = averageChunkSize * 3\n        const maxSize = Math.max(0, restrictions.maxFileSize - expectedEndChunkSize)\n\n        if (totalSize > maxSize) {\n          stoppingBecauseOfMaxSize = true\n          this.uppy.info(this.i18n('recordingStoppedMaxSize'), 'warning', 4000)\n          this.stopRecording()\n        }\n      }\n    })\n\n    // use a \"time slice\" of 500ms: ondataavailable will be called each 500ms\n    // smaller time slices mean we can more accurately check the max file size restriction\n    this.recorder.start(500)\n\n    if (this.opts.showRecordingLength) {\n      // Start the recordingLengthTimer if we are showing the recording length.\n      this.recordingLengthTimer = setInterval(() => {\n        const currentRecordingLength = this.getPluginState().recordingLengthSeconds\n        this.setPluginState({ recordingLengthSeconds: currentRecordingLength + 1 })\n      }, 1000)\n    }\n\n    this.setPluginState({\n      isRecording: true,\n    })\n  }\n\n  stopRecording () {\n    const stopped = new Promise((resolve) => {\n      this.recorder.addEventListener('stop', () => {\n        resolve()\n      })\n      this.recorder.stop()\n\n      if (this.opts.showRecordingLength) {\n        // Stop the recordingLengthTimer if we are showing the recording length.\n        clearInterval(this.recordingLengthTimer)\n        this.setPluginState({ recordingLengthSeconds: 0 })\n      }\n    })\n\n    return stopped.then(() => {\n      this.setPluginState({\n        isRecording: false,\n      })\n      return this.getVideo()\n    }).then((file) => {\n      try {\n        this.capturedMediaFile = file\n        // create object url for capture result preview\n        this.setPluginState({\n          // eslint-disable-next-line compat/compat\n          recordedVideo: URL.createObjectURL(file.data),\n        })\n        this.opts.mirror = false\n      } catch (err) {\n        // Logging the error, exept restrictions, which is handled in Core\n        if (!err.isRestriction) {\n          this.uppy.log(err)\n        }\n      }\n    }).then(() => {\n      this.recordingChunks = null\n      this.recorder = null\n    }, (error) => {\n      this.recordingChunks = null\n      this.recorder = null\n      throw error\n    })\n  }\n\n  discardRecordedVideo () {\n    this.setPluginState({ recordedVideo: null })\n    this.opts.mirror = true\n    this.capturedMediaFile = null\n  }\n\n  submit () {\n    try {\n      if (this.capturedMediaFile) {\n        this.uppy.addFile(this.capturedMediaFile)\n      }\n    } catch (err) {\n      // Logging the error, exept restrictions, which is handled in Core\n      if (!err.isRestriction) {\n        this.uppy.log(err, 'error')\n      }\n    }\n  }\n\n  stop () {\n    if (this.stream) {\n      this.stream.getAudioTracks().forEach((track) => {\n        track.stop()\n      })\n      this.stream.getVideoTracks().forEach((track) => {\n        track.stop()\n      })\n    }\n    this.webcamActive = false\n    this.stream = null\n    this.setPluginState({\n      recordedVideo: null,\n    })\n  }\n\n  getVideoElement () {\n    return this.el.querySelector('.uppy-Webcam-video')\n  }\n\n  oneTwoThreeSmile () {\n    return new Promise((resolve, reject) => {\n      let count = this.opts.countdown\n\n      // eslint-disable-next-line consistent-return\n      const countDown = setInterval(() => {\n        if (!this.webcamActive) {\n          clearInterval(countDown)\n          this.captureInProgress = false\n          return reject(new Error('Webcam is not active'))\n        }\n\n        if (count > 0) {\n          this.uppy.info(`${count}...`, 'warning', 800)\n          count--\n        } else {\n          clearInterval(countDown)\n          this.uppy.info(this.i18n('smile'), 'success', 1500)\n          setTimeout(() => resolve(), 1500)\n        }\n      }, 1000)\n    })\n  }\n\n  takeSnapshot () {\n    if (this.captureInProgress) return\n\n    this.captureInProgress = true\n\n    this.opts.onBeforeSnapshot().catch((err) => {\n      const message = typeof err === 'object' ? err.message : err\n      this.uppy.info(message, 'error', 5000)\n      return Promise.reject(new Error(`onBeforeSnapshot: ${message}`))\n    }).then(() => {\n      return this.getImage()\n    }).then((tagFile) => {\n      this.captureInProgress = false\n      try {\n        this.uppy.addFile(tagFile)\n      } catch (err) {\n        // Logging the error, except restrictions, which is handled in Core\n        if (!err.isRestriction) {\n          this.uppy.log(err)\n        }\n      }\n    }, (error) => {\n      this.captureInProgress = false\n      throw error\n    })\n  }\n\n  getImage () {\n    const video = this.getVideoElement()\n    if (!video) {\n      return Promise.reject(new Error('No video element found, likely due to the Webcam tab being closed.'))\n    }\n\n    const width = video.videoWidth\n    const height = video.videoHeight\n\n    const canvas = document.createElement('canvas')\n    canvas.width = width\n    canvas.height = height\n    const ctx = canvas.getContext('2d')\n    ctx.drawImage(video, 0, 0)\n\n    const { restrictions } = this.uppy.opts\n    let preferredImageMimeTypes = []\n    if (this.opts.preferredImageMimeType) {\n      preferredImageMimeTypes = [this.opts.preferredImageMimeType]\n    } else if (restrictions.allowedFileTypes) {\n      preferredImageMimeTypes = restrictions.allowedFileTypes.map(toMimeType).filter(isImageMimeType)\n    }\n\n    const mimeType = preferredImageMimeTypes[0] || 'image/jpeg'\n    const ext = getFileTypeExtension(mimeType) || 'jpg'\n    const name = `cam-${Date.now()}.${ext}`\n\n    return canvasToBlob(canvas, mimeType).then((blob) => {\n      return {\n        source: this.id,\n        name,\n        data: new Blob([blob], { type: mimeType }),\n        type: mimeType,\n      }\n    })\n  }\n\n  getVideo () {\n    // Sometimes in iOS Safari, Blobs (especially the first Blob in the recordingChunks Array)\n    // have empty 'type' attributes (e.g. '') so we need to find a Blob that has a defined 'type'\n    // attribute in order to determine the correct MIME type.\n    const mimeType = this.recordingChunks.find(blob => blob.type?.length > 0).type\n\n    const fileExtension = getFileTypeExtension(mimeType)\n\n    if (!fileExtension) {\n      return Promise.reject(new Error(`Could not retrieve recording: Unsupported media type \"${mimeType}\"`))\n    }\n\n    const name = `webcam-${Date.now()}.${fileExtension}`\n    const blob = new Blob(this.recordingChunks, { type: mimeType })\n    const file = {\n      source: this.id,\n      name,\n      data: new Blob([blob], { type: mimeType }),\n      type: mimeType,\n    }\n\n    return Promise.resolve(file)\n  }\n\n  focus () {\n    if (!this.opts.countdown) return\n    setTimeout(() => {\n      this.uppy.info(this.i18n('smile'), 'success', 1500)\n    }, 1000)\n  }\n\n  changeVideoSource (deviceId) {\n    this.stop()\n    this.start({ deviceId })\n  }\n\n  updateVideoSources () {\n    this.mediaDevices.enumerateDevices().then(devices => {\n      this.setPluginState({\n        videoSources: devices.filter((device) => device.kind === 'videoinput'),\n      })\n    })\n  }\n\n  render () {\n    if (!this.webcamActive) {\n      this.start()\n    }\n\n    const webcamState = this.getPluginState()\n\n    if (!webcamState.cameraReady || !webcamState.hasCamera) {\n      return (\n        <PermissionsScreen\n          icon={CameraIcon}\n          i18n={this.i18n}\n          hasCamera={webcamState.hasCamera}\n        />\n      )\n    }\n\n    return (\n      <CameraScreen\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...webcamState}\n        onChangeVideoSource={this.changeVideoSource}\n        onSnapshot={this.takeSnapshot}\n        onStartRecording={this.startRecording}\n        onStopRecording={this.stopRecording}\n        onDiscardRecordedVideo={this.discardRecordedVideo}\n        onSubmit={this.submit}\n        onFocus={this.focus}\n        onStop={this.stop}\n        i18n={this.i18n}\n        modes={this.opts.modes}\n        showRecordingLength={this.opts.showRecordingLength}\n        showVideoSourceDropdown={this.opts.showVideoSourceDropdown}\n        supportsRecording={supportsMediaRecorder()}\n        recording={webcamState.isRecording}\n        mirror={this.opts.mirror}\n        src={this.stream}\n      />\n    )\n  }\n\n  install () {\n    this.setPluginState({\n      cameraReady: false,\n      recordingLengthSeconds: 0,\n    })\n\n    const { target } = this.opts\n    if (target) {\n      this.mount(target, this)\n    }\n\n    if (this.mediaDevices) {\n      this.updateVideoSources()\n\n      this.mediaDevices.ondevicechange = () => {\n        this.updateVideoSources()\n\n        if (this.stream) {\n          let restartStream = true\n\n          const { videoSources, currentDeviceId } = this.getPluginState()\n\n          videoSources.forEach((videoSource) => {\n            if (currentDeviceId === videoSource.deviceId) {\n              restartStream = false\n            }\n          })\n\n          if (restartStream) {\n            this.stop()\n            this.start()\n          }\n        }\n      }\n    }\n  }\n\n  uninstall () {\n    if (this.stream) {\n      this.stop()\n    }\n\n    this.unmount()\n  }\n}\n"]}