{"version":3,"sources":["index.js"],"names":["require","Plugin","toArray","Translator","h","module","exports","uppy","opts","id","title","type","defaultLocale","strings","chooseFiles","defaultOptions","target","pretty","inputName","i18nInit","render","bind","handleInputChange","handleClick","setOptions","newOpts","translator","locale","i18n","translate","i18nArray","translateArray","setPluginState","addFiles","files","descriptors","map","file","source","name","data","err","log","event","value","ev","input","click","state","hiddenInputStyle","width","height","opacity","overflow","position","zIndex","restrictions","accept","allowedFileTypes","join","maxNumberOfFiles","install","mount","uninstall","unmount","VERSION"],"mappings":"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","sourcesContent":["const { Plugin } = require('@uppy/core')\nconst toArray = require('@uppy/utils/lib/toArray')\nconst Translator = require('@uppy/utils/lib/Translator')\nconst { h } = require('preact')\n\nmodule.exports = class FileInput extends Plugin {\n  static VERSION = require('../package.json').version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'FileInput'\n    this.title = 'File Input'\n    this.type = 'acquirer'\n\n    this.defaultLocale = {\n      strings: {\n        // The same key is used for the same purpose by @uppy/robodog's `form()` API, but our\n        // locale pack scripts can't access it in Robodog. If it is updated here, it should\n        // also be updated there!\n        chooseFiles: 'Choose files',\n      },\n    }\n\n    // Default options\n    const defaultOptions = {\n      target: null,\n      pretty: true,\n      inputName: 'files[]',\n    }\n\n    // Merge default options with the ones set by user\n    this.opts = { ...defaultOptions, ...opts }\n\n    this.i18nInit()\n\n    this.render = this.render.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  setOptions (newOpts) {\n    super.setOptions(newOpts)\n    this.i18nInit()\n  }\n\n  i18nInit () {\n    this.translator = new Translator([this.defaultLocale, this.uppy.locale, this.opts.locale])\n    this.i18n = this.translator.translate.bind(this.translator)\n    this.i18nArray = this.translator.translateArray.bind(this.translator)\n    this.setPluginState() // so that UI re-renders and we see the updated locale\n  }\n\n  addFiles (files) {\n    const descriptors = files.map((file) => ({\n      source: this.id,\n      name: file.name,\n      type: file.type,\n      data: file,\n    }))\n\n    try {\n      this.uppy.addFiles(descriptors)\n    } catch (err) {\n      this.uppy.log(err)\n    }\n  }\n\n  handleInputChange (event) {\n    this.uppy.log('[FileInput] Something selected through input...')\n    const files = toArray(event.target.files)\n    this.addFiles(files)\n\n    // We clear the input after a file is selected, because otherwise\n    // change event is not fired in Chrome and Safari when a file\n    // with the same name is selected.\n    // ___Why not use value=\"\" on <input/> instead?\n    //    Because if we use that method of clearing the input,\n    //    Chrome will not trigger change if we drop the same file twice (Issue #768).\n    event.target.value = null\n  }\n\n  handleClick (ev) {\n    this.input.click()\n  }\n\n  render (state) {\n    /* http://tympanus.net/codrops/2015/09/15/styling-customizing-file-inputs-smart-way/ */\n    const hiddenInputStyle = {\n      width: '0.1px',\n      height: '0.1px',\n      opacity: 0,\n      overflow: 'hidden',\n      position: 'absolute',\n      zIndex: -1,\n    }\n\n    const restrictions = this.uppy.opts.restrictions\n    const accept = restrictions.allowedFileTypes ? restrictions.allowedFileTypes.join(',') : null\n\n    return (\n      <div className=\"uppy-Root uppy-FileInput-container\">\n        <input\n          className=\"uppy-FileInput-input\"\n          style={this.opts.pretty && hiddenInputStyle}\n          type=\"file\"\n          name={this.opts.inputName}\n          onChange={this.handleInputChange}\n          multiple={restrictions.maxNumberOfFiles !== 1}\n          accept={accept}\n          ref={(input) => { this.input = input }}\n        />\n        {this.opts.pretty\n          && (\n          <button\n            className=\"uppy-FileInput-btn\"\n            type=\"button\"\n            onClick={this.handleClick}\n          >\n            {this.i18n('chooseFiles')}\n          </button>\n          )}\n      </div>\n    )\n  }\n\n  install () {\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    this.unmount()\n  }\n}\n"]}