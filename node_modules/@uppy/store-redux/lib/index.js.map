{"version":3,"sources":["index.js"],"names":["cuid","require","STATE_UPDATE","defaultSelector","id","state","uppy","ReduxStore","opts","_store","store","_id","_selector","selector","setState","patch","dispatch","type","payload","getState","subscribe","cb","prevState","nextState","getPatch","VERSION","prev","next","nextKeys","Object","keys","forEach","k","reducer","action","newState","middleware","module","exports","createReduxStore"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACA,IAAMC,YAAY,GAAG,mBAArB,C,CAEA;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,EAAD;AAAA,SAAQ,UAACC,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWF,EAAX,CAAX;AAAA,GAAR;AAAA,CAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACMG,U;AAGJ,sBAAaC,IAAb,EAAmB;AACjB,SAAKC,MAAL,GAAcD,IAAI,CAACE,KAAnB;AACA,SAAKC,GAAL,GAAWH,IAAI,CAACJ,EAAL,IAAWJ,IAAI,EAA1B;AACA,SAAKY,SAAL,GAAiBJ,IAAI,CAACK,QAAL,IAAiBV,eAAe,CAAC,KAAKQ,GAAN,CAAjD,CAHiB,CAKjB;;AACA,SAAKG,QAAL,CAAc,EAAd;AACD;;;;SAEDA,Q,GAAA,kBAAUC,KAAV,EAAiB;AACf,SAAKN,MAAL,CAAYO,QAAZ,CAAqB;AACnBC,MAAAA,IAAI,EAAEf,YADa;AAEnBE,MAAAA,EAAE,EAAE,KAAKO,GAFU;AAGnBO,MAAAA,OAAO,EAAEH;AAHU,KAArB;AAKD,G;;SAEDI,Q,GAAA,oBAAY;AACV,WAAO,KAAKP,SAAL,CAAe,KAAKH,MAAL,CAAYU,QAAZ,EAAf,CAAP;AACD,G;;SAEDC,S,GAAA,mBAAWC,EAAX,EAAe;AAAA;;AACb,QAAIC,SAAS,GAAG,KAAKH,QAAL,EAAhB;AACA,WAAO,KAAKV,MAAL,CAAYW,SAAZ,CAAsB,YAAM;AACjC,UAAMG,SAAS,GAAG,KAAI,CAACJ,QAAL,EAAlB;;AACA,UAAIG,SAAS,KAAKC,SAAlB,EAA6B;AAC3B,YAAMR,KAAK,GAAGS,QAAQ,CAACF,SAAD,EAAYC,SAAZ,CAAtB;AACAF,QAAAA,EAAE,CAACC,SAAD,EAAYC,SAAZ,EAAuBR,KAAvB,CAAF;AACAO,QAAAA,SAAS,GAAGC,SAAZ;AACD;AACF,KAPM,CAAP;AAQD,G;;;;;AAlCGhB,U,CACGkB,O;;AAoCT,SAASD,QAAT,CAAmBE,IAAnB,EAAyBC,IAAzB,EAA+B;AAC7B,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAZ,CAAjB;AACA,MAAMZ,KAAK,GAAG,EAAd;AACAa,EAAAA,QAAQ,CAACG,OAAT,CAAiB,UAACC,CAAD,EAAO;AACtB,QAAIN,IAAI,CAACM,CAAD,CAAJ,KAAYL,IAAI,CAACK,CAAD,CAApB,EAAyBjB,KAAK,CAACiB,CAAD,CAAL,GAAWL,IAAI,CAACK,CAAD,CAAf;AAC1B,GAFD;AAGA,SAAOjB,KAAP;AACD;;AAED,SAASkB,OAAT,CAAkB5B,KAAlB,EAA8B6B,MAA9B,EAAsC;AAAA,MAApB7B,KAAoB;AAApBA,IAAAA,KAAoB,GAAZ,EAAY;AAAA;;AACpC,MAAI6B,MAAM,CAACjB,IAAP,KAAgBf,YAApB,EAAkC;AAAA;;AAChC,QAAMiC,QAAQ,gBAAQ9B,KAAK,CAAC6B,MAAM,CAAC9B,EAAR,CAAb,EAA6B8B,MAAM,CAAChB,OAApC,CAAd;;AACA,wBAAYb,KAAZ,6BAAoB6B,MAAM,CAAC9B,EAA3B,IAAgC+B,QAAhC;AACD;;AACD,SAAO9B,KAAP;AACD;;AAED,SAAS+B,UAAT,GAAuB;AACrB;AACA,SAAO;AAAA,WAAM,UAACT,IAAD;AAAA,aAAU,UAACO,MAAD,EAAY;AACjCP,QAAAA,IAAI,CAACO,MAAD,CAAJ;AACD,OAFY;AAAA,KAAN;AAAA,GAAP;AAGD;;AAEDG,MAAM,CAACC,OAAP,GAAiB,SAASC,gBAAT,CAA2B/B,IAA3B,EAAiC;AAChD,SAAO,IAAID,UAAJ,CAAeC,IAAf,CAAP;AACD,CAFD;;AAIA6B,MAAM,CAACC,OAAP,CAAepC,YAAf,GAA8BA,YAA9B;AACAmC,MAAM,CAACC,OAAP,CAAeL,OAAf,GAAyBA,OAAzB;AACAI,MAAM,CAACC,OAAP,CAAeF,UAAf,GAA4BA,UAA5B","sourcesContent":["const cuid = require('cuid')\n\n// Redux action name.\nconst STATE_UPDATE = 'uppy/STATE_UPDATE'\n\n// Pluck Uppy state from the Redux store in the default location.\nconst defaultSelector = (id) => (state) => state.uppy[id]\n\n/**\n * Redux store.\n *\n * @param {object} opts.store - The Redux store to use.\n * @param {string} opts.id - This store instance's ID. Defaults to a random string.\n *    If you need to access Uppy state through Redux, eg. to render custom UI, set this to something constant.\n * @param {Function} opts.selector - Function, `(state) => uppyState`, to pluck state from the Redux store.\n *    Defaults to retrieving `state.uppy[opts.id]`. Override if you placed Uppy state elsewhere in the Redux store.\n */\nclass ReduxStore {\n  static VERSION = require('../package.json').version\n\n  constructor (opts) {\n    this._store = opts.store\n    this._id = opts.id || cuid()\n    this._selector = opts.selector || defaultSelector(this._id)\n\n    // Initialise the `uppy[id]` state key.\n    this.setState({})\n  }\n\n  setState (patch) {\n    this._store.dispatch({\n      type: STATE_UPDATE,\n      id: this._id,\n      payload: patch,\n    })\n  }\n\n  getState () {\n    return this._selector(this._store.getState())\n  }\n\n  subscribe (cb) {\n    let prevState = this.getState()\n    return this._store.subscribe(() => {\n      const nextState = this.getState()\n      if (prevState !== nextState) {\n        const patch = getPatch(prevState, nextState)\n        cb(prevState, nextState, patch)\n        prevState = nextState\n      }\n    })\n  }\n}\n\nfunction getPatch (prev, next) {\n  const nextKeys = Object.keys(next)\n  const patch = {}\n  nextKeys.forEach((k) => {\n    if (prev[k] !== next[k]) patch[k] = next[k]\n  })\n  return patch\n}\n\nfunction reducer (state = {}, action) {\n  if (action.type === STATE_UPDATE) {\n    const newState = { ...state[action.id], ...action.payload }\n    return { ...state, [action.id]: newState }\n  }\n  return state\n}\n\nfunction middleware () {\n  // Do nothing, at the moment.\n  return () => (next) => (action) => {\n    next(action)\n  }\n}\n\nmodule.exports = function createReduxStore (opts) {\n  return new ReduxStore(opts)\n}\n\nmodule.exports.STATE_UPDATE = STATE_UPDATE\nmodule.exports.reducer = reducer\nmodule.exports.middleware = middleware\n"]}