{"version":3,"sources":["isXml.js"],"names":["removeMimeParameters","mimeType","replace","isXml","content","xhr","rawContentType","headers","getResponseHeader","contentType","toLowerCase","test","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAT,CAA+BC,QAA/B,EAAyC;AACvC,SAAOA,QAAQ,CAACC,OAAT,CAAiB,MAAjB,EAAyB,EAAzB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,KAAT,CAAgBC,OAAhB,EAAyBC,GAAzB,EAA8B;AAC5B,MAAMC,cAAc,GAAID,GAAG,CAACE,OAAJ,GAAcF,GAAG,CAACE,OAAJ,CAAY,cAAZ,CAAd,GAA4CF,GAAG,CAACG,iBAAJ,CAAsB,cAAtB,CAApE;;AAEA,MAAI,OAAOF,cAAP,KAA0B,QAA9B,EAAwC;AACtC,QAAMG,WAAW,GAAGT,oBAAoB,CAACM,cAAD,CAApB,CAAqCI,WAArC,EAApB;;AACA,QAAID,WAAW,KAAK,iBAAhB,IAAqCA,WAAW,KAAK,UAAzD,EAAqE;AACnE,aAAO,IAAP;AACD,KAJqC,CAKtC;AACA;;;AACA,QAAIA,WAAW,KAAK,WAAhB,IAA+B,WAAWE,IAAX,CAAgBP,OAAhB,CAAnC,EAA6D;AAC3D,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBV,KAAjB","sourcesContent":["/**\n * Remove parameters like `charset=utf-8` from the end of a mime type string.\n *\n * @param {string} mimeType - The mime type string that may have optional parameters.\n * @returns {string} The \"base\" mime type, i.e. only 'category/type'.\n */\nfunction removeMimeParameters (mimeType) {\n  return mimeType.replace(/;.*$/, '')\n}\n\n/**\n * Check if a response contains XML based on the response object and its text content.\n *\n * @param {string} content - The text body of the response.\n * @param {object|XMLHttpRequest} xhr - The XHR object or response object from Companion.\n * @returns {bool} Whether the content is (probably) XML.\n */\nfunction isXml (content, xhr) {\n  const rawContentType = (xhr.headers ? xhr.headers['content-type'] : xhr.getResponseHeader('Content-Type'))\n\n  if (typeof rawContentType === 'string') {\n    const contentType = removeMimeParameters(rawContentType).toLowerCase()\n    if (contentType === 'application/xml' || contentType === 'text/xml') {\n      return true\n    }\n    // GCS uses text/html for some reason\n    // https://github.com/transloadit/uppy/issues/896\n    if (contentType === 'text/html' && /^<\\?xml /.test(content)) {\n      return true\n    }\n  }\n  return false\n}\n\nmodule.exports = isXml\n"]}