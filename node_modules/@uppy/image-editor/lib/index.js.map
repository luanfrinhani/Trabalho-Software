{"version":3,"sources":["index.js"],"names":["require","Plugin","Editor","Translator","h","module","exports","uppy","opts","save","blob","getPluginState","currentImage","setFileState","id","data","size","preview","updatedFile","getFile","emit","setPluginState","selectFile","file","title","type","defaultLocale","strings","revert","rotate","zoomIn","zoomOut","flipHorizontal","aspectRatioSquare","aspectRatioLandscape","aspectRatioPortrait","defaultCropperOptions","viewMode","background","autoCropArea","responsive","defaultActions","flip","cropSquare","cropWidescreen","cropWidescreenVertical","defaultOptions","quality","actions","cropperOptions","i18nInit","setOptions","newOpts","translator","locale","i18n","translate","bind","canEditFile","isRemote","fileTypeSpecific","split","test","install","target","mount","uninstall","unmount","render","VERSION"],"mappings":"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","sourcesContent":["const { Plugin } = require('@uppy/core')\nconst Editor = require('./Editor')\nconst Translator = require('@uppy/utils/lib/Translator')\nconst { h } = require('preact')\n\nmodule.exports = class ImageEditor extends Plugin {\n  static VERSION = require('../package.json').version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'ImageEditor'\n    this.title = 'Image Editor'\n    this.type = 'editor'\n\n    this.defaultLocale = {\n      strings: {\n        save: 'Save',\n        revert: 'Revert',\n        rotate: 'Rotate',\n        zoomIn: 'Zoom in',\n        zoomOut: 'Zoom out',\n        flipHorizontal: 'Flip horizontal',\n        aspectRatioSquare: 'Crop square',\n        aspectRatioLandscape: 'Crop landscape (16:9)',\n        aspectRatioPortrait: 'Crop portrait (9:16)',\n      },\n    }\n\n    const defaultCropperOptions = {\n      viewMode: 1,\n      background: false,\n      autoCropArea: 1,\n      responsive: true,\n    }\n\n    const defaultActions = {\n      revert: true,\n      rotate: true,\n      flip: true,\n      zoomIn: true,\n      zoomOut: true,\n      cropSquare: true,\n      cropWidescreen: true,\n      cropWidescreenVertical: true,\n    }\n\n    const defaultOptions = {\n      quality: 0.8,\n    }\n\n    this.opts = {\n      ...defaultOptions,\n      ...opts,\n      actions: {\n        ...defaultActions,\n        ...opts.actions,\n      },\n      cropperOptions: {\n        ...defaultCropperOptions,\n        ...opts.cropperOptions,\n      },\n    }\n\n    this.i18nInit()\n  }\n\n  setOptions (newOpts) {\n    super.setOptions(newOpts)\n    this.i18nInit()\n  }\n\n  i18nInit () {\n    this.translator = new Translator([this.defaultLocale, this.uppy.locale, this.opts.locale])\n    this.i18n = this.translator.translate.bind(this.translator)\n    // this.i18nArray = this.translator.translateArray.bind(this.translator)\n    this.setPluginState() // so that UI re-renders and we see the updated locale\n  }\n\n  canEditFile (file) {\n    if (!file.type || file.isRemote) {\n      return false\n    }\n\n    const fileTypeSpecific = file.type.split('/')[1]\n\n    if (/^(jpe?g|gif|png|bmp|webp)$/.test(fileTypeSpecific)) {\n      return true\n    }\n\n    return false\n  }\n\n  save = (blob) => {\n    const { currentImage } = this.getPluginState()\n\n    this.uppy.setFileState(currentImage.id, {\n      data: blob,\n      size: blob.size,\n      preview: null,\n    })\n\n    const updatedFile = this.uppy.getFile(currentImage.id)\n    this.uppy.emit('thumbnail:request', updatedFile)\n    this.setPluginState({\n      currentImage: updatedFile,\n    })\n    this.uppy.emit('file-editor:complete', updatedFile)\n  }\n\n  selectFile = (file) => {\n    this.uppy.emit('file-editor:start', file)\n    this.setPluginState({\n      currentImage: file,\n    })\n  }\n\n  install () {\n    this.setPluginState({\n      currentImage: null,\n    })\n\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    this.unmount()\n  }\n\n  render () {\n    const { currentImage } = this.getPluginState()\n    if (currentImage === null || currentImage.isRemote) {\n      return\n    }\n\n    return (\n      <Editor\n        currentImage={currentImage}\n        save={this.save}\n        opts={this.opts}\n        i18n={this.i18n}\n      />\n    )\n  }\n}\n"]}