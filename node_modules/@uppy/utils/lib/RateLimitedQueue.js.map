{"version":3,"sources":["RateLimitedQueue.js"],"names":["findIndex","require","createCancelError","Error","module","exports","limit","Infinity","activeRequests","queuedHandlers","_call","fn","done","cancelActive","err","abort","_queueNext","Promise","resolve","then","_next","length","next","shift","handler","_queue","options","priority","_dequeue","index","other","push","splice","indexOf","run","queueOptions","wrapPromiseFunction","args","queuedRequest","outerPromise","reject","cancelError","innerPromise","result"],"mappings":"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","sourcesContent":["const findIndex = require('./findIndex')\n\nfunction createCancelError () {\n  return new Error('Cancelled')\n}\n\nmodule.exports = class RateLimitedQueue {\n  constructor (limit) {\n    if (typeof limit !== 'number' || limit === 0) {\n      this.limit = Infinity\n    } else {\n      this.limit = limit\n    }\n\n    this.activeRequests = 0\n    this.queuedHandlers = []\n  }\n\n  _call (fn) {\n    this.activeRequests += 1\n\n    let done = false\n\n    let cancelActive\n    try {\n      cancelActive = fn()\n    } catch (err) {\n      this.activeRequests -= 1\n      throw err\n    }\n\n    return {\n      abort: () => {\n        if (done) return\n        done = true\n        this.activeRequests -= 1\n        cancelActive()\n        this._queueNext()\n      },\n\n      done: () => {\n        if (done) return\n        done = true\n        this.activeRequests -= 1\n        this._queueNext()\n      },\n    }\n  }\n\n  _queueNext () {\n    // Do it soon but not immediately, this allows clearing out the entire queue synchronously\n    // one by one without continuously _advancing_ it (and starting new tasks before immediately\n    // aborting them)\n    Promise.resolve().then(() => {\n      this._next()\n    })\n  }\n\n  _next () {\n    if (this.activeRequests >= this.limit) {\n      return\n    }\n    if (this.queuedHandlers.length === 0) {\n      return\n    }\n\n    // Dispatch the next request, and update the abort/done handlers\n    // so that cancelling it does the Right Thing (and doesn't just try\n    // to dequeue an already-running request).\n    const next = this.queuedHandlers.shift()\n    const handler = this._call(next.fn)\n    next.abort = handler.abort\n    next.done = handler.done\n  }\n\n  _queue (fn, options = {}) {\n    const handler = {\n      fn,\n      priority: options.priority || 0,\n      abort: () => {\n        this._dequeue(handler)\n      },\n      done: () => {\n        throw new Error('Cannot mark a queued request as done: this indicates a bug')\n      },\n    }\n\n    const index = findIndex(this.queuedHandlers, (other) => {\n      return handler.priority > other.priority\n    })\n    if (index === -1) {\n      this.queuedHandlers.push(handler)\n    } else {\n      this.queuedHandlers.splice(index, 0, handler)\n    }\n    return handler\n  }\n\n  _dequeue (handler) {\n    const index = this.queuedHandlers.indexOf(handler)\n    if (index !== -1) {\n      this.queuedHandlers.splice(index, 1)\n    }\n  }\n\n  run (fn, queueOptions) {\n    if (this.activeRequests < this.limit) {\n      return this._call(fn)\n    }\n    return this._queue(fn, queueOptions)\n  }\n\n  wrapPromiseFunction (fn, queueOptions) {\n    return (...args) => {\n      let queuedRequest\n      const outerPromise = new Promise((resolve, reject) => {\n        queuedRequest = this.run(() => {\n          let cancelError\n          let innerPromise\n          try {\n            innerPromise = Promise.resolve(fn(...args))\n          } catch (err) {\n            innerPromise = Promise.reject(err)\n          }\n\n          innerPromise.then((result) => {\n            if (cancelError) {\n              reject(cancelError)\n            } else {\n              queuedRequest.done()\n              resolve(result)\n            }\n          }, (err) => {\n            if (cancelError) {\n              reject(cancelError)\n            } else {\n              queuedRequest.done()\n              reject(err)\n            }\n          })\n\n          return () => {\n            cancelError = createCancelError()\n          }\n        }, queueOptions)\n      })\n\n      outerPromise.abort = () => {\n        queuedRequest.abort()\n      }\n\n      return outerPromise\n    }\n  }\n}\n"]}