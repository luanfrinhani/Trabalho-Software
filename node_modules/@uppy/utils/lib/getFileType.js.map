{"version":3,"sources":["getFileType.js"],"names":["getFileNameAndExtension","require","mimeTypes","module","exports","getFileType","file","fileExtension","name","extension","toLowerCase","type"],"mappings":"AAAA,IAAMA,uBAAuB,GAAGC,OAAO,CAAC,2BAAD,CAAvC;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAsBC,IAAtB,EAA4B;AAC3C,MAAIC,aAAa,GAAGD,IAAI,CAACE,IAAL,GAAYR,uBAAuB,CAACM,IAAI,CAACE,IAAN,CAAvB,CAAmCC,SAA/C,GAA2D,IAA/E;AACAF,EAAAA,aAAa,GAAGA,aAAa,GAAGA,aAAa,CAACG,WAAd,EAAH,GAAiC,IAA9D;;AAEA,MAAIJ,IAAI,CAACK,IAAT,EAAe;AACb;AACA,WAAOL,IAAI,CAACK,IAAZ;AACD;;AAAC,MAAIJ,aAAa,IAAIL,SAAS,CAACK,aAAD,CAA9B,EAA+C;AAC/C;AACA,WAAOL,SAAS,CAACK,aAAD,CAAhB;AACD,GAV0C,CAW3C;;;AACA,SAAO,0BAAP;AACD,CAbD","sourcesContent":["const getFileNameAndExtension = require('./getFileNameAndExtension')\nconst mimeTypes = require('./mimeTypes')\n\nmodule.exports = function getFileType (file) {\n  let fileExtension = file.name ? getFileNameAndExtension(file.name).extension : null\n  fileExtension = fileExtension ? fileExtension.toLowerCase() : null\n\n  if (file.type) {\n    // if mime type is set in the file object already, use that\n    return file.type\n  } if (fileExtension && mimeTypes[fileExtension]) {\n    // else, see if we can map extension to a mime type\n    return mimeTypes[fileExtension]\n  }\n  // if all fails, fall back to a generic byte stream type\n  return 'application/octet-stream'\n}\n"]}