{"version":3,"sources":["delay.js"],"names":["require","createAbortError","module","exports","delay","ms","opts","Promise","resolve","reject","signal","aborted","onabort","clearTimeout","timeout","cleanup","setTimeout","addEventListener","removeEventListener"],"mappings":"eAA6BA,OAAO,CAAC,mBAAD,C;IAA5BC,gB,YAAAA,gB;AAER;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAgBC,EAAhB,EAAoBC,IAApB,EAA0B;AACzC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIH,IAAI,IAAIA,IAAI,CAACI,MAAb,IAAuBJ,IAAI,CAACI,MAAL,CAAYC,OAAvC,EAAgD;AAC9C,aAAOF,MAAM,CAACR,gBAAgB,EAAjB,CAAb;AACD;;AAED,aAASW,OAAT,GAAoB;AAClBC,MAAAA,YAAY,CAACC,OAAD,CAAZ;AACAC,MAAAA,OAAO;AACPN,MAAAA,MAAM,CAACR,gBAAgB,EAAjB,CAAN;AACD;;AAED,QAAMa,OAAO,GAAGE,UAAU,CAAC,YAAM;AAC/BD,MAAAA,OAAO;AACPP,MAAAA,OAAO;AACR,KAHyB,EAGvBH,EAHuB,CAA1B;;AAKA,QAAIC,IAAI,IAAIA,IAAI,CAACI,MAAjB,EAAyB;AACvBJ,MAAAA,IAAI,CAACI,MAAL,CAAYO,gBAAZ,CAA6B,OAA7B,EAAsCL,OAAtC;AACD;;AACD,aAASG,OAAT,GAAoB;AAClB,UAAIT,IAAI,IAAIA,IAAI,CAACI,MAAjB,EAAyB;AACvBJ,QAAAA,IAAI,CAACI,MAAL,CAAYQ,mBAAZ,CAAgC,OAAhC,EAAyCN,OAAzC;AACD;AACF;AACF,GAxBM,CAAP;AAyBD,CA1BD","sourcesContent":["const { createAbortError } = require('./AbortController')\n\n/**\n * Return a Promise that resolves after `ms` milliseconds.\n *\n * @param {number} ms - Number of milliseconds to wait.\n * @param {{ signal?: AbortSignal }} [opts] - An abort signal that can be used to cancel the delay early.\n * @returns {Promise<void>} A Promise that resolves after the given amount of `ms`.\n */\nmodule.exports = function delay (ms, opts) {\n  return new Promise((resolve, reject) => {\n    if (opts && opts.signal && opts.signal.aborted) {\n      return reject(createAbortError())\n    }\n\n    function onabort () {\n      clearTimeout(timeout)\n      cleanup()\n      reject(createAbortError())\n    }\n\n    const timeout = setTimeout(() => {\n      cleanup()\n      resolve()\n    }, ms)\n\n    if (opts && opts.signal) {\n      opts.signal.addEventListener('abort', onabort)\n    }\n    function cleanup () {\n      if (opts && opts.signal) {\n        opts.signal.removeEventListener('abort', onabort)\n      }\n    }\n  })\n}\n"]}