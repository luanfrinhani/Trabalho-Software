{"version":3,"sources":["EventTracker.js"],"names":["module","exports","emitter","_events","_emitter","on","event","fn","push","remove","forEach","off"],"mappings":"AAAA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAP;AACE,wBAAaC,OAAb,EAAsB;AACpB,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,QAAL,GAAgBF,OAAhB;AACD;;AAJH;;AAAA,SAMEG,EANF,GAME,YAAIC,KAAJ,EAAWC,EAAX,EAAe;AACb,SAAKJ,OAAL,CAAaK,IAAb,CAAkB,CAACF,KAAD,EAAQC,EAAR,CAAlB;;AACA,WAAO,KAAKH,QAAL,CAAcC,EAAd,CAAiBC,KAAjB,EAAwBC,EAAxB,CAAP;AACD,GATH;;AAAA,SAWEE,MAXF,GAWE,kBAAU;AAAA;;AACR,SAAKN,OAAL,CAAaO,OAAb,CAAqB,gBAAiB;AAAA,UAAfJ,KAAe;AAAA,UAARC,EAAQ;;AACpC,MAAA,KAAI,CAACH,QAAL,CAAcO,GAAd,CAAkBL,KAAlB,EAAyBC,EAAzB;AACD,KAFD;AAGD,GAfH;;AAAA;AAAA","sourcesContent":["/**\n * Create a wrapper around an event emitter with a `remove` method to remove\n * all events that were added using the wrapped emitter.\n */\nmodule.exports = class EventTracker {\n  constructor (emitter) {\n    this._events = []\n    this._emitter = emitter\n  }\n\n  on (event, fn) {\n    this._events.push([event, fn])\n    return this._emitter.on(event, fn)\n  }\n\n  remove () {\n    this._events.forEach(([event, fn]) => {\n      this._emitter.off(event, fn)\n    })\n  }\n}\n"]}