{"version":3,"sources":["getFileTypeExtension.js"],"names":["mimeToExtensions","module","exports","getFileTypeExtension","mimeType","replace"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAMA,gBAAgB,GAAG;AACvB,eAAa,KADU;AAEvB,eAAa,KAFU;AAGvB,eAAa,KAHU;AAIvB,gBAAc,MAJS;AAKvB,eAAa,KALU;AAMvB,gBAAc,MANS;AAOvB,gBAAc,MAPS;AAQvB,gBAAc,KARS;AASvB,eAAa,KATU;AAUvB,mBAAiB,KAVM;AAWvB,eAAa,KAXU;AAYvB,eAAa,KAZU;AAavB,qBAAmB,KAbI;AAcvB,gBAAc,MAdS;AAevB,sBAAoB,KAfG;AAgBvB,qBAAmB;AAhBI,CAAzB;;AAmBAC,MAAM,CAACC,OAAP,GAAiB,SAASC,oBAAT,CAA+BC,QAA/B,EAAyC;AACxD;AACAA,EAAAA,QAAQ,GAAGA,QAAQ,CAACC,OAAT,CAAiB,MAAjB,EAAyB,EAAzB,CAAX;AACA,SAAOL,gBAAgB,CAACI,QAAD,CAAhB,IAA8B,IAArC;AACD,CAJD","sourcesContent":["// TODO Check which types are actually supported in browsers. Chrome likes webm\n// from my testing, but we may need more.\n// We could use a library but they tend to contain dozens of KBs of mappings,\n// most of which will go unused, so not sure if that's worth it.\nconst mimeToExtensions = {\n  'audio/mp3': 'mp3',\n  'audio/mp4': 'mp4',\n  'audio/ogg': 'ogg',\n  'audio/webm': 'webm',\n  'image/gif': 'gif',\n  'image/heic': 'heic',\n  'image/heif': 'heif',\n  'image/jpeg': 'jpg',\n  'image/png': 'png',\n  'image/svg+xml': 'svg',\n  'video/mp4': 'mp4',\n  'video/ogg': 'ogv',\n  'video/quicktime': 'mov',\n  'video/webm': 'webm',\n  'video/x-matroska': 'mkv',\n  'video/x-msvideo': 'avi',\n}\n\nmodule.exports = function getFileTypeExtension (mimeType) {\n  // Remove the ; bit in 'video/x-matroska;codecs=avc1'\n  mimeType = mimeType.replace(/;.*$/, '')\n  return mimeToExtensions[mimeType] || null\n}\n"]}