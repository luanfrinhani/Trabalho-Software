{"version":3,"sources":["ItemList.js"],"names":["require","h","remoteFileObjToLocal","Item","VIRTUAL_SHARED_DIR","getSharedProps","fileOrFolder","props","id","title","name","getItemIcon","icon","isChecked","toggleCheckbox","e","columns","showTitles","viewType","i18n","module","exports","folders","files","handleScroll","length","map","folder","type","isDisabled","loading","isCheckboxDisabled","handleFolderClick","file","validateRestrictions","uppyFiles","currentSelection","sharedProps","restrictionReason","reason","result"],"mappings":"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","sourcesContent":["const { h } = require('preact')\nconst remoteFileObjToLocal = require('@uppy/utils/lib/remoteFileObjToLocal')\nconst Item = require('./Item/index')\n\n// Hopefully this name will not be used by Google\nconst VIRTUAL_SHARED_DIR = 'shared-with-me'\n\nconst getSharedProps = (fileOrFolder, props) => ({\n  id: fileOrFolder.id,\n  title: fileOrFolder.name,\n  getItemIcon: () => fileOrFolder.icon,\n  isChecked: props.isChecked(fileOrFolder),\n  toggleCheckbox: (e) => props.toggleCheckbox(e, fileOrFolder),\n  columns: props.columns,\n  showTitles: props.showTitles,\n  viewType: props.viewType,\n  i18n: props.i18n,\n})\n\nmodule.exports = (props) => {\n  const { folders, files, handleScroll, isChecked } = props\n\n  if (!folders.length && !files.length) {\n    return <div className=\"uppy-Provider-empty\">{props.i18n('noFilesFound')}</div>\n  }\n\n  return (\n    <div className=\"uppy-ProviderBrowser-body\">\n      <ul\n        className=\"uppy-ProviderBrowser-list\"\n        onScroll={handleScroll}\n        role=\"listbox\"\n        // making <ul> not focusable for firefox\n        tabIndex=\"-1\"\n      >\n        {folders.map(folder => {\n          return Item({\n            ...getSharedProps(folder, props),\n            type: 'folder',\n            isDisabled: isChecked(folder) ? isChecked(folder).loading : false,\n            isCheckboxDisabled: folder.id === VIRTUAL_SHARED_DIR,\n            handleFolderClick: () => props.handleFolderClick(folder),\n          })\n        })}\n        {files.map(file => {\n          const validateRestrictions = props.validateRestrictions(\n            remoteFileObjToLocal(file),\n            [...props.uppyFiles, ...props.currentSelection]\n          )\n          const sharedProps = getSharedProps(file, props)\n          const restrictionReason = validateRestrictions.reason\n\n          return Item({\n            ...sharedProps,\n            type: 'file',\n            isDisabled: !validateRestrictions.result && !sharedProps.isChecked,\n            restrictionReason,\n          })\n        })}\n      </ul>\n    </div>\n  )\n}\n"]}