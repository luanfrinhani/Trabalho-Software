{"version":3,"sources":["index.js"],"names":["require","Plugin","Provider","DriveProviderViews","h","module","exports","uppy","opts","id","title","initPlugin","icon","provider","companionUrl","companionHeaders","serverHeaders","companionKeysParams","companionCookiesRule","pluginId","onFirstRender","bind","render","install","view","target","mount","uninstall","tearDown","unmount","Promise","all","fetchPreAuthToken","getFolder","state","VERSION"],"mappings":"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","sourcesContent":["const { Plugin } = require('@uppy/core')\nconst { Provider } = require('@uppy/companion-client')\nconst DriveProviderViews = require('./DriveProviderViews')\nconst { h } = require('preact')\n\nmodule.exports = class GoogleDrive extends Plugin {\n  static VERSION = require('../package.json').version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'GoogleDrive'\n    this.title = this.opts.title || 'Google Drive'\n    Provider.initPlugin(this, opts)\n    this.title = this.opts.title || 'Google Drive'\n    this.icon = () => (\n      <svg aria-hidden=\"true\" focusable=\"false\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <rect className=\"uppy-ProviderIconBg\" fill=\"#4285F4\" width=\"32\" height=\"32\" rx=\"16\" />\n          <path d=\"M10.324 23.3l3-5.1H25l-3 5.1H10.324zM13 18.2l-3 5.1-3-5.1 5.839-9.924 2.999 5.1L13 18.2zm11.838-.276h-6L13 8h6l5.84 9.924h-.002z\" fill=\"#FFF\" />\n        </g>\n      </svg>\n    )\n\n    this.provider = new Provider(uppy, {\n      companionUrl: this.opts.companionUrl,\n      companionHeaders: this.opts.companionHeaders || this.opts.serverHeaders,\n      companionKeysParams: this.opts.companionKeysParams,\n      companionCookiesRule: this.opts.companionCookiesRule,\n      provider: 'drive',\n      pluginId: this.id,\n    })\n\n    this.onFirstRender = this.onFirstRender.bind(this)\n    this.render = this.render.bind(this)\n  }\n\n  install () {\n    this.view = new DriveProviderViews(this, {\n      provider: this.provider,\n    })\n\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    this.view.tearDown()\n    this.unmount()\n  }\n\n  onFirstRender () {\n    return Promise.all([\n      this.provider.fetchPreAuthToken(),\n      this.view.getFolder('root', '/'),\n    ])\n  }\n\n  render (state) {\n    return this.view.render(state)\n  }\n}\n"]}